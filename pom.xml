<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.mall.project</groupId>
    <artifactId>mall-project</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- 声明变量，其他项目可直接引用 -->
    <properties>
        <imooc.security.version>0.0.1-SNAPSHOT</imooc.security.version>
        <mybatis-plus.version>3.1.0</mybatis-plus.version>
        <hutool.version>4.5.0</hutool.version>
        <swagger2.version>2.7.0</swagger2.version>
        <orika.version>1.5.4</orika.version>
        <druid.version>1.1.18</druid.version>
        <easyexcel.version>1.1.2-beta5</easyexcel.version>
        <kaptcha.version>2.3.2</kaptcha.version>
    </properties>

    <!-- 引入其他项目，作为此项目的子模块，引入后，选中所有项目目录，进行maven更新 -->
    <modules>
        <module>mall-project-demo</module>
        <module>mall-project-security-app</module>
        <module>mall-project-common</module>
        <module>mall-project-security-browser</module>
        <module>mall-project-api</module>
        <module>mall-project-service</module>
        <module>mall-project-security-core</module>
    </modules>
    <!-- 父类工程，用于聚合其他项目 -->

    <!-- 用于版本管控 -->
    <dependencyManagement>
        <dependencies>
            <!-- 控制spring依赖版本 -->
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>Brussels-SR4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 引入spring cloud，结合spring io共同控制spring版本 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Dalston.SR2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- mybatis plus 版本控制 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- druid连接池 版本控制 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- 工具类版本控制-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!-- 接口文档版本控制 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger2.version}</version>
            </dependency>

            <!-- MapperFacade 用于dto ->entity的转换 -->
            <dependency>
                <groupId>ma.glasnost.orika</groupId>
                <artifactId>orika-core</artifactId>
                <version>${orika.version}</version>
            </dependency>

            <!-- 阿里excel操作 版本控制 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.penggle</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- 可使用@Data注解快速构建bean类 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--
            spring默认使用yml中的配置，但有时候要用传统的xml或properties配置，
            就需要使用spring-boot-configuration-processor了
            在配置类开头加上@PropertySource("classpath:your.properties")，其余用法与加载yml的配置一样
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--排除这个自带slf4j-log4j12 避免与我们引入的包冲突-->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 可将Web服务器切换到Undertow来提高应用性能  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <!-- 日志记录相关jar包 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <!-- AOP 切片相关jar包 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
    </dependencies>

    <build>
        <!-- 引入插件，用于maven编译 ，指定使用1.8版本jdk进行编译-->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>